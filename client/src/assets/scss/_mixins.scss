// _mixins.scss

@import 'functions';

@mixin responsive-width($min-width, $max-width, $width) {
  @media only all and (min-width: $min-width) and (max-width: $max-width) {
    width: $width;
  }
}

@mixin list-container(
  $margin-bottom,
  $margin-left,
  $margin-top,
  $max-width,
  $margin
) {
  margin-bottom: $margin-bottom;
  margin-left: $margin-left;
  margin-top: $margin-top;
  @media only all and (max-width: $max-width) {
    margin: $margin;
  }
}

//Create the mixin for theme colors
@mixin theme($name, $color) {
  // Define colors in your theme
  $primary: $color;
  $secondary: lighten(adjust-hue($color, 20), 10%);

  // Add your classes with css colors added
  .#{$name} {
    .element {
      color: $primary;
    }

    .other-element {
      background: $secondary;
    }
  }
}

// Define vertical, horizontal, or both position
@mixin center($position) {
  position: absolute;

  @if $position == 'vertical' {
    -ms-transform: translateY(-50%);
    -webkit-transform: translateY(-50%);
    top: 50%;
    transform: translateY(-50%);
  } @else if $position == 'horizontal' {
    -ms-transform: translateX(-50%);
    -webkit-transform: translateX(-50%);
    left: 50%;
    transform: translate(-50%);
  } @else if $position == 'both' {
    -ms-transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%);
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

// Clearfix mixin
/*
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
*/

//Animation mixin setup
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}
@mixin animation($str) {
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  -webkit-animation: #{$str};
  animation: #{$str};
}

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6 / 2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin background-gradient($start-color, $end-color, $orientation) {
  background: $start-color;

  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(
      center,
      ellipse cover,
      $start-color,
      $end-color
    );
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

//Padding mixin
@mixin padding($top, $right, $bottom, $left) {
  padding-bottom: $bottom;
  padding-left: $left;
  padding-right: $right;
  padding-top: $top;
}
//Margin mixin
@mixin margin($top, $right, $bottom, $left) {
  margin-bottom: $bottom;
  margin-left: $left;
  margin-right: $right;
  margin-top: $top;
}
